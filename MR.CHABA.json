{"files":[{"id":"2f0d8117-6c4d-4552-80a5-82d5fe8ea8c6","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"Asia/Jakarta\",\n  \"dependencies\": {},\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\",\n  \"webapp\": {\n    \"executeAs\": \"USER_ACCESSING\",\n    \"access\": \"ANYONE\"\n  }\n}"},{"id":"5a631389-5671-4444-b14b-6b6cb79d1a25","name":"Kode","type":"server_js","source":"// Kode untuk server side (Google Apps Script)\n\nfunction doGet() {\n  return HtmlService.createHtmlOutputFromFile(\u0027Index\u0027);\n}\n\n// Fungsi untuk mengirim data ke client (browser)\nfunction sendDataToClient(data) {\n  var html \u003d HtmlService.createHtmlOutputFromFile(\u0027Index\u0027)\n      .append(\u0027\u003cscript\u003eupdateData(\u0027 + JSON.stringify(data) + \u0027)\u003c/script\u003e\u0027);\n  return html.setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);\n}\n\n// Fungsi untuk memproses data dari Pixhawk (contoh)\nfunction parseDataFromPixhawk(data) {\n  // Proses data di sini, sesuaikan dengan format data dari Pixhawk\n  var position \u003d { x: 100, y: 200 }; // Contoh posisi kapal\n  var speedKnot \u003d 15; // Contoh kecepatan dalam knot\n  var course \u003d \u0027North\u0027; // Contoh arah kapal\n  var dateTime \u003d new Date().toISOString(); // Contoh waktu saat ini\n\n  return {\n    x: position.x,\n    y: position.y,\n    day: getDayOfWeek(dateTime),\n    date: formatDate(dateTime),\n    time: formatTime(dateTime),\n    speedKnot: speedKnot,\n    speedKmh: knotToKmh(speedKnot),\n    course: course\n  };\n}\n\n// Fungsi untuk mendapatkan nama hari dari tanggal\nfunction getDayOfWeek(dateString) {\n  var days \u003d [\u0027Sun\u0027, \u0027Mon\u0027, \u0027Tue\u0027, \u0027Wed\u0027, \u0027Thu\u0027, \u0027Fri\u0027, \u0027Sat\u0027];\n  var date \u003d new Date(dateString);\n  return days[date.getDay()];\n}\n\n// Fungsi untuk memformat tanggal (dd/mm/yyyy)\nfunction formatDate(dateString) {\n  var date \u003d new Date(dateString);\n  var day \u003d (\u00270\u0027 + date.getDate()).slice(-2);\n  var month \u003d (\u00270\u0027 + (date.getMonth() + 1)).slice(-2);\n  var year \u003d date.getFullYear();\n  return day + \u0027/\u0027 + month + \u0027/\u0027 + year;\n}\n\n// Fungsi untuk memformat waktu (hh:mm:ss)\nfunction formatTime(dateString) {\n  var date \u003d new Date(dateString);\n  var hours \u003d (\u00270\u0027 + date.getHours()).slice(-2);\n  var minutes \u003d (\u00270\u0027 + date.getMinutes()).slice(-2);\n  var seconds \u003d (\u00270\u0027 + date.getSeconds()).slice(-2);\n  return hours + \u0027:\u0027 + minutes + \u0027:\u0027 + seconds;\n}\n\n// Fungsi untuk mengkonversi kecepatan knot menjadi km/h\nfunction knotToKmh(knot) {\n  return knot * 1.852; // 1 knot \u003d 1.852 km/h\n}\n"},{"id":"7964c613-a242-47f7-99a4-316258638b3e","name":"Index","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml lang\u003d\"en\"\u003e\n\u003chead\u003e\n    \u003cmeta charset\u003d\"UTF-8\"\u003e\n    \u003cmeta name\u003d\"viewport\" content\u003d\"width\u003ddevice-width, initial-scale\u003d1.0\"\u003e\n    \u003cbase target\u003d\"_top\"\u003e\n    \u003ctitle\u003ePixhawk Data Display\u003c/title\u003e\n    \u003cstyle\u003e\n        header {\n            background-color: #146797;\n            color: white;\n            text-align: center;\n            padding: 10px;\n            margin-bottom: 15px;\n            width: 100%;\n        }\n\n        body {\n            font-family: Arial, sans-serif;\n            display: flex;\n            justify-content: center;\n            align-items: flex-start;\n            height: 100vh;\n            margin: 0;\n            background-color: #f0f0f0;\n            overflow: hidden;\n        }\n\n        #container {\n            display: flex;\n            flex-direction: column;\n            align-items: top;\n            gap: 20px;\n            background-color: #f0f0f0;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n            width: 100%;\n            max-width: 1200px;\n            height: 100vh;\n            overflow-y: auto;\n        }\n\n        .top-section {\n            justify-content: center; /* Add this line */\n\n            display: flex;\n            gap: 20px;\n            width: 100%;\n            max-width: 1200px;\n        }\n\n        #kolam {\n            position: relative;\n            width: 500px;\n            height: 500px;\n            background-color: #cceeff;\n            border: 2px solid #3498db;\n            border-radius: 10px;\n            overflow: hidden;\n            background-image: \n                repeating-linear-gradient(to right, rgba(0, 0, 0, 0.2) 0px, rgba(0, 0, 0, 0.2) 1px, transparent 1px, transparent 100px),\n                repeating-linear-gradient(to bottom, rgba(0, 0, 0, 0.2) 0px, rgba(0, 0, 0, 0.2) 1px, transparent 1px, transparent 100px);\n            background-size: 100px 100px;\n        }\n\n        #kapal {\n            position: absolute;\n            width: 50px;\n            height: 20px;\n            background-color: #f520cd;\n            clip-path: polygon(10% 80%, 10% 30%, 30% 20%, 70% 20%, 90% 30%, 100% 50%, 90% 70%, 70% 80%, 30% 80%, 10% 70%);\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n        }\n\n        #info {\n            display: flex;\n            flex-direction: column;\n            align-items: flex-start;\n            background-color: #fff;\n            border: 2px solid #3498db;\n            padding: 20px;\n            border-radius: 10px;\n            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n            width: 100%;\n            max-width: 410px;\n            overflow-y: auto;\n        }\n\n        #info h2 {\n            margin-bottom: 10px;\n            color: #3498db;\n        }\n\n        #info p {\n            margin: 5px 0;\n            font-weight: bold;\n            color: #333;\n        }\n\n        .geo-tag-infos {\n            margin-bottom: 20px;\n        }\n\n        .geo-tag-infos p {\n            margin: 5px 0;\n            color: #333;\n        }\n\n        .camera-container {\n            align-items: center; /* Add this line */\n\n            display: flex;\n            flex-direction: column;\n            gap: 10px;\n            margin-top: 20px;\n        }\n\n        .camera-item {\n            position: relative;\n            border: 2px solid #3498db;\n            border-radius: 10px;\n            overflow: hidden;\n            width: 400px; /* Perbesar lebar kamera */\n            height: 300px; /* Perbesar tinggi kamera */\n            display: flex;\n            flex-direction: column; /* Add this line */\n        }\n\n        .camera-item img {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n        }\n\n        .camera-details {\n            position: relative;\n            background-color: white;\n            padding: 10px;\n            border: 2px solid #3498db;\n            font-size: 12px;\n            color: #333;\n            width: 100%; /* Lebar yang sama dengan kamera */\n            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n        }\n\n        .camera-details .timestamp {\n            background-color: rgba(0, 0, 0, 0.5);\n            color: white;\n            padding: 5px;\n            text-align: center;\n            font-size: 12px;\n        }\n\n        .camera-details .info {\n            margin-top: 5px;\n        }\n\n        #camera1-container {\n            top: -20px;\n            left: -190px;\n        }\n\n        #camera2-container {\n            top: -334px;\n            left: 230px;\n        }\n\n        @media (max-width: 768px) {\n            #kolam {\n                width: 100%;\n                height: auto;\n                padding-top: 100%;\n            }\n\n            #info {\n                width: 90%;\n                padding: 15px;\n                position: static;\n                max-width: none;\n            }\n\n            .camera-item {\n                width: 100%;\n                height: auto;\n                top: auto;\n                left: auto;\n            }\n        }\n\n        @media (max-width: 480px) {\n            #info {\n                width: 100%;\n                font-size: 14px;\n                padding: 10px;\n            }\n\n            .camera-item {\n                height: 150px;\n            }\n\n            .camera-details .timestamp {\n                font-size: 12px;\n            }\n\n            .camera-details {\n                font-size: 10px;\n            }\n        }\n    \u003c/style\u003e\n\u003c/head\u003e\n\u003cbody\u003e\n    \u003cdiv id\u003d\"container\"\u003e\n        \u003cheader\u003e\n            \u003ch1\u003eMR.CHABA MONITORING SYSTEM\u003c/h1\u003e\n        \u003c/header\u003e\n        \u003cdiv class\u003d\"top-section\"\u003e\n            \u003cdiv id\u003d\"kolam\"\u003e\n                \u003cdiv id\u003d\"kapal\"\u003e\u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv id\u003d\"info\"\u003e\n                \u003ch2\u003ePOSITION AND MISSION IMAGING\u003c/h2\u003e\n                \u003cdiv class\u003d\"geo-tag-infos\"\u003e\n                    \u003cp\u003eDay: \u003cspan id\u003d\"day\"\u003e0\u003c/span\u003e\u003c/p\u003e\n                    \u003cp\u003eDate: \u003cspan id\u003d\"date\"\u003e0\u003c/span\u003e\u003c/p\u003e\n                    \u003cp\u003eTime: \u003cspan id\u003d\"time\"\u003e0\u003c/span\u003e\u003c/p\u003e\n                    \u003cp\u003eCoordinate: [\u003cspan id\u003d\"latitude\"\u003eS 0.00000\u003c/span\u003e, \u003cspan id\u003d\"longitude\"\u003eE 0.00000\u003c/span\u003e]\u003c/p\u003e\n                    \u003cp\u003eSpeed Over Ground (SOG): \u003cspan id\u003d\"speedKnot\"\u003e0\u003c/span\u003e knot / \u003cspan id\u003d\"speedKmh\"\u003e0\u003c/span\u003e km/h\u003c/p\u003e\n                    \u003cp\u003eCourse Over Ground (COG): \u003cspan id\u003d\"course\"\u003e0\u003c/span\u003e deg\u003c/p\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n        \u003cdiv class\u003d\"camera-container\"\u003e\n            \u003cdiv class\u003d\"camera-item\" id\u003d\"camera1-container\"\u003e\n                \u003cimg id\u003d\"camera1\" src\u003d\"https://www.example.com/image1.jpg\" alt\u003d\"Camera feed 1\"\u003e\n                \u003cdiv class\u003d\"camera-details\" id\u003d\"camera1-details\"\u003e\n                    \u003cdiv class\u003d\"timestamp\" id\u003d\"camera1-timestamp\"\u003eTimestamp: 0\u003c/div\u003e\n                    \u003cdiv class\u003d\"info\"\u003e\n                        \u003cp\u003eDay: \u003cspan id\u003d\"camera1-day\"\u003e0\u003c/span\u003e\u003c/p\u003e\n                        \u003cp\u003eDate: \u003cspan id\u003d\"camera1-date\"\u003e0\u003c/span\u003e\u003c/p\u003e\n                        \u003cp\u003eTime: \u003cspan id\u003d\"camera1-time\"\u003e0\u003c/span\u003e\u003c/p\u003e\n                        \u003cp\u003eCoordinate: [\u003cspan id\u003d\"camera1-latitude\"\u003eS 0.00000\u003c/span\u003e, \u003cspan id\u003d\"camera1-longitude\"\u003eE 0.00000\u003c/span\u003e]\u003c/p\u003e\n                        \u003cp\u003eSpeed Over Ground (SOG): \u003cspan id\u003d\"camera1-speedKnot\"\u003e0\u003c/span\u003e knot / \u003cspan id\u003d\"camera1-speedKmh\"\u003e0\u003c/span\u003e km/h\u003c/p\u003e\n                        \u003cp\u003eCourse Over Ground (COG): \u003cspan id\u003d\"camera1-course\"\u003e0\u003c/span\u003e deg\u003c/p\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n            \u003cdiv class\u003d\"camera-item\" id\u003d\"camera2-container\"\u003e\n                \u003cimg id\u003d\"camera2\" src\u003d\"https://www.example.com/image2.jpg\" alt\u003d\"Camera feed 2\"\u003e\n                \u003cdiv class\u003d\"camera-details\" id\u003d\"camera2-details\"\u003e\n                    \u003cdiv class\u003d\"timestamp\" id\u003d\"camera2-timestamp\"\u003eTimestamp: 0\u003c/div\u003e\n                    \u003cdiv class\u003d\"info\"\u003e\n                        \u003cp\u003eDay: \u003cspan id\u003d\"camera2-day\"\u003e0\u003c/span\u003e\u003c/p\u003e\n                        \u003cp\u003eDate: \u003cspan id\u003d\"camera2-date\"\u003e0\u003c/span\u003e\u003c/p\u003e\n                        \u003cp\u003eTime: \u003cspan id\u003d\"camera2-time\"\u003e0\u003c/span\u003e\u003c/p\u003e\n                        \u003cp\u003eCoordinate: [\u003cspan id\u003d\"camera2-latitude\"\u003eS 0.00000\u003c/span\u003e, \u003cspan id\u003d\"camera2-longitude\"\u003eE 0.00000\u003c/span\u003e]\u003c/p\u003e\n                        \u003cp\u003eSpeed Over Ground (SOG): \u003cspan id\u003d\"camera2-speedKnot\"\u003e0\u003c/span\u003e knot / \u003cspan id\u003d\"camera2-speedKmh\"\u003e0\u003c/span\u003e km/h\u003c/p\u003e\n                        \u003cp\u003eCourse Over Ground (COG): \u003cspan id\u003d\"camera2-course\"\u003e0\u003c/span\u003e deg\u003c/p\u003e\n                    \u003c/div\u003e\n                \u003c/div\u003e\n            \u003c/div\u003e\n        \u003c/div\u003e\n    \u003c/div\u003e\n\n    \u003cscript\u003e\n        // Fungsi untuk mendapatkan tanggal dan waktu saat ini\n        function getCurrentDateTime() {\n            const now \u003d new Date();\n            const days \u003d [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n            const dayName \u003d days[now.getDay()];\n            const date \u003d now.getDate();\n            const month \u003d now.getMonth() + 1; // bulan dimulai dari 0\n            const year \u003d now.getFullYear();\n            const hours \u003d now.getHours().toString().padStart(2, \u00270\u0027);\n            const minutes \u003d now.getMinutes().toString().padStart(2, \u00270\u0027);\n            const seconds \u003d now.getSeconds().toString().padStart(2, \u00270\u0027);\n            \n            return {\n                dayName: dayName,\n                date: date,\n                month: month,\n                year: year,\n                time: `${hours}:${minutes}:${seconds}`\n            };\n        }\n\n        // Fungsi untuk memperbarui informasi\n        function updateInfo() {\n            const { dayName, date, month, year, time } \u003d getCurrentDateTime();\n            document.getElementById(\"day\").textContent \u003d dayName;\n            document.getElementById(\"date\").textContent \u003d `${date}/${month}/${year}`;\n            document.getElementById(\"time\").textContent \u003d time;\n            \n            // Contoh data statis, ganti dengan data real-time dari sensor\n            document.getElementById(\"latitude\").textContent \u003d \"S 0.00000\";\n            document.getElementById(\"longitude\").textContent \u003d \"E 0.00000\";\n            document.getElementById(\"speedKnot\").textContent \u003d \"0\";\n            document.getElementById(\"speedKmh\").textContent \u003d \"0\";\n            document.getElementById(\"course\").textContent \u003d \"0\";\n        }\n\n        // Fungsi untuk memperbarui informasi kamera\n        function updateCameraInfo(cameraId) {\n            const timestampElement \u003d document.getElementById(`${cameraId}-timestamp`);\n            const dayElement \u003d document.getElementById(`${cameraId}-day`);\n            const dateElement \u003d document.getElementById(`${cameraId}-date`);\n            const timeElement \u003d document.getElementById(`${cameraId}-time`);\n            const latitudeElement \u003d document.getElementById(`${cameraId}-latitude`);\n            const longitudeElement \u003d document.getElementById(`${cameraId}-longitude`);\n            const speedKnotElement \u003d document.getElementById(`${cameraId}-speedKnot`);\n            const speedKmhElement \u003d document.getElementById(`${cameraId}-speedKmh`);\n            const courseElement \u003d document.getElementById(`${cameraId}-course`);\n\n            const { dayName, date, month, year, time } \u003d getCurrentDateTime();\n\n            timestampElement.textContent \u003d `Timestamp: ${time}`;\n            dayElement.textContent \u003d dayName;\n            dateElement.textContent \u003d `${date}/${month}/${year}`;\n            timeElement.textContent \u003d time;\n            latitudeElement.textContent \u003d \"S 0.00000\";\n            longitudeElement.textContent \u003d \"E 0.00000\";\n            speedKnotElement.textContent \u003d \"0\";\n            speedKmhElement.textContent \u003d \"0\";\n            courseElement.textContent \u003d \"0\";\n        }\n\n        // Memperbarui informasi setiap detik\n        function update() {\n            updateInfo();\n            updateCameraInfo(\"camera1\");\n            updateCameraInfo(\"camera2\");\n        }\n\n        // Memperbarui informasi setiap detik\n        setInterval(update, 1000);\n\n        // Inisialisasi\n        window.onload \u003d update;\n    \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e\n"}]}